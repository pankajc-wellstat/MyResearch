import { useEffect } from 'react';
import useApi from '@/hooks/useApi';
import apiRoutes from '@/services/apiRoutes';

const UserList = () => {
  const { callApi, loading, error } = useApi();

  useEffect(() => {
    const fetchUsers = async () => {
      try {
        await callApi(apiRoutes.users, 'GET', null, null, 'Users loaded!');
      } catch (err) {
        // Error toast already handled in hook
      }
    };

    fetchUsers();
  }, []);

  return (
    <div>
      {loading && <p>Loading users...</p>}
      {error && <p style={{ color: 'red' }}>Error occurred</p>}
    </div>
  );
};

export default UserList;


UPDATE equipment_template SET type = 'indoor' WHERE public_name LIKE '%Indoor%'
UPDATE equipment_template SET type = 'outdoor' WHERE public_name LIKE '%Outdoor%'
UPDATE equipment_template SET type = 'water' WHERE public_name LIKE '%SKU200%'

UPDATE data_feed_device_type_template
SET device_id_mapping = 'EUI',
    timestamp_mapping = '.timestamp',
    timestamp_format = 'UNIX_SECONDS'
WHERE device_type = 'AirScan_Outdoor';

const buildingsTableDataFromRedux = useSelector(
  (state) => state.appData.buildingsTableData,
);
const buildingsTableData =
  localTableData !== undefined ? localTableData : buildingsTableDataFromRedux;
useEffect(() => {
  if (
    localTableData !== undefined &&
    buildingsTableDataFromRedux !== undefined &&
    buildingsTableDataFromRedux !== null
  ) {
    setLocalTableData(undefined);
  }
}, [buildingsTableDataFromRedux]);



