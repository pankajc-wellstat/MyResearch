E461D4064F265429



SELECT
  SEC_TO_TIME(
    GREATEST(
      TIMESTAMPDIFF(SECOND, UTC_TIMESTAMP(), DATE_ADD(timestamp, INTERVAL 48 HOUR)),
      0
    )
  ) AS remaining_time
FROM airscan_test_page_access
WHERE id = 1;


const express = require('express');
const mysql = require('mysql2/promise');
const app = express();

const DB_CONFIG = {
  host: 'your-db-host',
  user: 'your-db-user',
  password: 'your-db-password',
  database: 'your-db-name'
};


#########################################################
app.get('/remaining-time/:userId', async (req, res) => {
  const userId = req.params.userId;

  try {
    const connection = await mysql.createConnection(DB_CONFIG);

    // Fetch stored timestamp
    const [rows] = await connection.execute(
      'SELECT timestamp FROM user_actions WHERE user_id = ?',
      [userId]
    );

    if (rows.length === 0) {
      return res.status(404).json({ error: 'No timestamp found for user.' });
    }

    const savedTimestamp = new Date(rows[0].timestamp);
    const now = new Date();

    // Calculate elapsed time in milliseconds
    const elapsedMs = now - savedTimestamp;

    // 48 hours in milliseconds
    const totalWindowMs = 48 * 60 * 60 * 1000;

    const remainingMs = Math.max(totalWindowMs - elapsedMs, 0);

    // Convert to hh:mm:ss
    const hours = Math.floor(remainingMs / (1000 * 60 * 60));
    const minutes = Math.floor((remainingMs % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((remainingMs % (1000 * 60)) / 1000);

    const formattedTime = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;

    res.json({ remainingTime: formattedTime });

  } catch (error) {
    console.error('Error:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
});

app.listen(3000, () => {
  console.log('Server running on port 3000');
});



