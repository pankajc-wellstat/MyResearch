export const authToServer = async (data) => {
  try {
    console.log("Starting auth flow...");
    authToken = null;

    for (let i = 0; i < REGIONS.length; i++) {
      const region = REGIONS[i];
      const backendUrl =
        region === US_EAST_1
          ? appConfig.backendurl
          : appConfig.backendurl.replaceAll(".wellstat.io", `-${region}.wellstat.io`);

      const cfg = {
        method: "post",
        url: `${backendUrl}/auth`,
        data,
        timeout: 2000,
        headers: { "Content-type": "application/json" },
      };

      console.log(`Attempting region: ${region}`);
      console.log("Request config:", cfg);

      let response;
      try {
        response = await axios(cfg);
      } catch (error) {
        console.log(`Axios error in region "${region}":`, error?.message || "Unknown error");
        if (i < REGIONS.length - 1) continue;
        throw error;
      }

      const responseData = response?.data ?? {};
      console.log(`Response from ${region}:`, responseData);

      if (
        typeof responseData === "string" &&
        (responseData.includes("https://accounts.google.com") ||
         responseData.includes("https://login.microsoftonline.com") ||
         responseData.includes("/login?token="))
      ) {
        console.log("Detected external login redirect.");
        window.location.href = responseData;
        return;
      }

      if (responseData?.rc === "OK") {
        const context = response.data.context;
        const { token: authToken } = context;

        console.log(`Login successful in region: ${region}`);
        localStorage.setItem(AUTH_TOKEN_KEY, authToken);
        localStorage.setItem(BACKEND_URL_KEY, backendUrl);

        return { status: response?.statusText, data: responseData };
      }

      console.warn(`Auth failed in region "${region}":`, responseData);

      if (i < REGIONS.length - 1) continue;

      return { status: response?.statusText, data: responseData };
    }
  } catch (error) {
    console.error("Final error after trying all regions:", {
      message: error.message,
      stack: error.stack,
      code: error.code,
      response: error.response?.data,
    });

    return {
      status: "error",
      error: error.message,
      details: error.response?.data || {},
    };
  }
};
